1t = - 1
2t = - 1
var a next [ 4 ] [ 2 ] = { { 1 , 0 } , { 0 , 1t } , { 2t , 0 } , { 0 , 1 } }
const v len = 3
3t = - 1
4t = - 1
const a next1 [ 4 ] [ 2 ] = { { 1 , 0 } , { 0 , 3t } , { 4t , 0 } , { 0 , 1 } }
const a xxx [ 2 ] = { 1 , 2 }
var v ans = 0
var a arr [ 2 ] = { 3 , 1 }
func int getDif3N
para v min
para v max
start getDif3N
var v i = 1
var v j = 1
var v k = 1
var v cnt = 0
var a arr1 [ 2 ] = { 1 , 2 }
#while
#cond1 i <= 3
cond #cond1
CheckCond
start #while
upd j = 1
#while
#cond1 j <= 3
cond #cond1
CheckCond
start #while
upd k = 1
#while
#cond1 k <= 3
cond #cond1
CheckCond
start #while
#if1
#cond1 i != j &&
#cond2 i != k &&
#cond3 j != k
cond #cond1 && #cond2 && #cond3
CheckCond
start #if1
5t = cnt + 1
upd cnt = 5t
end #if1
6t = k + 1
upd k = 6t
end #while
7t = j + 1
upd j = 7t
end #while
8t = i + 1
upd i = 8t
end #while
ret cnt
end getDif3N
func int judgeB
para v a
para v b
start judgeB
#if2
#cond1 a <= b
cond #cond1
CheckCond
start #if2
#if3
#cond1 a < b
cond #cond1
CheckCond
start #if3
9t = a - b
ret 9t
end #if3
start #else3
#if4
#cond1 a == b
cond #cond1
CheckCond
start #if4
ret 0
end #if4
end #else3
end #if2
start #else2
#if5
#cond1 a >= b
cond #cond1
CheckCond
start #if5
#if6
#cond1 a > b
cond #cond1
CheckCond
start #if6
10t = a - b
ret 10t
end #if6
start #else6
#if7
#cond1 a == b
cond #cond1
CheckCond
start #if7
ret 0
end #if7
end #else6
end #if5
end #else2
ret 0
end judgeB
func void printArr
para a a [ ]
start printArr
var v i = 0
#while
#cond1 i < 2
cond #cond1
CheckCond
start #while
ins-1
11t = a [ i ]
anw-1 = 11t
PRINTF
12t = i + 1
upd i = 12t
end #while
ln-1
PRINTF
end printArr
func void printArr2
para a a [ ] [ 2 ]
start printArr2
var v i = 0
#while
#cond1 i < 4
cond #cond1
CheckCond
start #while
13t = a [ i ]
push 13t
call printArr
14t = RET
15t = i + 1
upd i = 15t
end #while
ret
end printArr2
func void printHello
start printHello
var v name
16t = GETINT
upd name = 16t
str-1 =Hello 
ins-1
ln-1
anw-1 = name
PRINTF
end printHello
func int add
para v n
start add
var v ans
17t = n + 3
upd ans = 17t
ret ans
end add
func void opp
start opp
end opp
func int main
start main
str-1 =19373573
ln-1
PRINTF
var v ans
start #block
end #block
start #block
upd ans = 3
end #block
var v i = 0
var v y = 1
#if8
18t = ! y
#cond1 18t
cond #cond1
CheckCond
start #if8
upd y = 0
end #if8
19t = + 1
upd y = 19t
20t = - 1
upd y = 20t
var v xx
21t = next [ 0 ] [ 0 ]
22t = ( 16 + 2 ) / ( i + 1 ) - 14 + 21t
upd xx = 22t
#while
#cond1 i <= 5
cond #cond1
CheckCond
start #while
#if9
#cond1 i == 3
cond #cond1
CheckCond
start #if9
23t = i + 1
upd i = 23t
CONTINUE
end #if9
#if10
#cond1 i == 5
cond #cond1
CheckCond
start #if10
BREAK
end #if10
start #else10
var v j = i
end #else10
24t = i + 1
upd i = 24t
end #while
25t = GETINT
upd ans = 25t
ins-1
ln-1
push ans
call add
26t = RET
anw-1 = 26t
PRINTF
push 1
push 999
call getDif3N
27t = RET
upd ans = 27t
ins-1
ln-1
anw-1 = ans
PRINTF
push 2
push 3
call judgeB
28t = RET
upd ans = 28t
str-1 =judgeB 2,3 = 
ins-1
ln-1
anw-1 = ans
PRINTF
call printHello
29t = RET
push next
call printArr2
30t = RET
31t = next [ 0 ]
push 31t
call printArr
32t = RET
push arr
call printArr
33t = RET
ret 0
end main
