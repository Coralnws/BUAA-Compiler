var v a
var v b
var v c
var v d
var v e
var v i = 0
func int func0
para v a
para v b
start func0
var v i = 0
var v c = 128
1t = ( a + b ) % c
ret 1t
end func0
func int func1
para v a
start func1
2t = i + 1
upd i = 2t
ret i
end func1
func int func2
para v a
para v b
start func2
str-1 =a=
ins-1
str-2 = , b=
ins-2
ln-1
anw-1 = a
anw-2 = b
PRINTF
#if1
3t = a % b
#cond1 3t == 0
cond #cond1
CheckCond
start #if1
start #block
str-1 =return 1
ln-1
PRINTF
ret 1
end #block
end #if1
ret 0
end func2
func int func3
start func3
str-1 =glo_i = 
ins-1
ln-1
anw-1 = i
PRINTF
var v tt0
var v tt1
var v t2
var v tt3
var v tt4
var v v = 1906
#while
#cond1 i < 10
cond #cond1
CheckCond
start #while
start #block
4t = a * 4 * 32 * a / a / 32
var v v = 4t
push b
push v
call func0
5t = RET
upd b = 5t
6t = a * 4 + b + c
upd tt0 = 6t
7t = a * 4 + b + c + d
upd tt1 = 7t
8t = a * 4 + b + c + d + e
upd t2 = 8t
9t = a * 4 + b + c + d + e
upd tt3 = 9t
10t = a * 4 + b + c + d + e
upd tt4 = 10t
#if2
push i
push 10
call func2
11t = RET
#cond1 11t
cond #cond1
CheckCond
start #if2
start #block
str-1 =sum = 
ins-1
ln-1
12t = tt0 + tt1 + t2 + tt3 + tt4
anw-1 = 12t
PRINTF
end #block
end #if2
push i
call func1
13t = RET
str-1 =i=
ins-1
ln-1
anw-1 = i
PRINTF
end #block
end #while
14t = tt0 + tt1 + t2 + tt3 + tt4
ret 14t
end func3
func int main
start main
var v i = 0
15t = GETINT
upd a = 15t
16t = GETINT
upd b = 16t
17t = GETINT
upd c = 17t
18t = GETINT
upd d = 18t
19t = GETINT
upd e = 19t
20t = GETINT
upd i = 20t
str-1 =main_i = 
ins-1
ln-1
anw-1 = i
PRINTF
str-1 =a=
ins-1
str-2 = , b=
ins-2
ln-1
anw-1 = a
anw-2 = b
PRINTF
ins-1
ln-1
call func3
21t = RET
anw-1 = 21t
PRINTF
ret 0
end main
