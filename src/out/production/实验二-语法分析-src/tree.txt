<CompUnit>
<FuncDef>
<FuncType>
int
print0
(
)
<Block>
{
<BlockItem>
<Stmt>
printf
(
"print0\n"
)
;
<BlockItem>
<Stmt>
return
<Exp>
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
0
;
}
<FuncDef>
<FuncType>
int
print1
(
)
<Block>
{
<BlockItem>
<Stmt>
printf
(
"print1\n"
)
;
<BlockItem>
<Stmt>
return
<Exp>
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
1
;
}
<MainFuncDef>
int
main
(
)
<Block>
{
<BlockItem>
<Stmt>
if
(
<Cond>
<LOrExp>
<LAndExp>
<EqExp>
<RelExp>
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
1
&&
<EqExp>
<RelExp>
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
0
||
<LAndExp>
<EqExp>
<RelExp>
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
1
&&
<EqExp>
<RelExp>
<AddExp>
<MulExp>
<UnaryExp>
print0
(
)
)
<Stmt>
<Block>
{
<BlockItem>
<Stmt>
printf
(
"break\n"
)
;
}
<BlockItem>
<Stmt>
if
(
<Cond>
<LOrExp>
<LAndExp>
<EqExp>
<RelExp>
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
0
&&
<EqExp>
<RelExp>
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
0
&&
<EqExp>
<RelExp>
<AddExp>
<MulExp>
<UnaryExp>
<UnaryOp>
!
<UnaryExp>
<UnaryOp>
-
<UnaryExp>
<PrimaryExp>
<Number>
36
<
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
7
+
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
1
||
<LAndExp>
<EqExp>
<RelExp>
<AddExp>
<MulExp>
<UnaryExp>
<UnaryOp>
+
<UnaryExp>
<PrimaryExp>
<Number>
36
>
<AddExp>
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
8
-
<MulExp>
<UnaryExp>
<PrimaryExp>
<Number>
1
)
<Stmt>
<Block>
{
<BlockItem>
<Stmt>
printf
(
"break\n"
)
;
}
}
