const v c_common = 10
const a c_array [ 3 ] = { 1 , 2 , 3 }
const a c_matrix [ 3 ] [ 3 ] = { { 1 , 2 , 3 } , { 1 , 2 , 3 } , { 1 , 2 , 3 } }
var v v_common
var a v_array [ 3 ]
var a v_matrix [ 3 ] [ 3 ]
var v v_commonInit = 10
var a v_arrayInit [ 3 ] = { 1 , 2 , 3 }
var a v_matrixInit [ 3 ] [ 3 ] = { { 1 , 2 , 3 } , { 1 , 2 , 3 } , { 1 , 2 , 3 } }
func void print
para v output
start print
ln-1
str-1 =f2() flag : 
ins-1
anw-1 = output
PRINTF
ret
end print
func int f0
start f0
ret 1
end f0
func int f1
para a a [ ]
para a b [ ] [ 3 ]
para a c [ ]
start f1
1t = a [ 0 ]
2t = b [ 0 ] [ 0 ]
3t = c [ 0 ]
4t = 1t + 2t + 3t
ret 4t
end f1
func int f2
para v a
para v b
start f2
var v c
var v flag
var a a1 [ 2 ] = { 1 , 2 }
var a a2 [ 3 ] [ 3 ] = { { 1 , 2 , 3 } , { 1 , 2 , 3 } , { 1 , 2 , 3 } }
push a1
push a2
5t = a2 [ 0 ]
push 5t
call f1
6t = RET
call f0
7t = RET
8t = - ( a * b ) + a / b + ( a % b ) - 1 + 6t - + 7t
upd c = 8t
#if1
#cond1 a > 10 &&
#cond2 b > 10
cond #cond1 && #cond2
CheckCond
start #if1
push 1
call print
9t = RET
upd flag = 0
end #if1
#if2
#cond1 a > 10 &&
#cond2 b <= 10
cond #cond1 && #cond2
CheckCond
start #if2
push 2
call print
10t = RET
upd flag = 0
end #if2
#if3
#cond1 a <= 10 &&
#cond2 b <= 10
cond #cond1 && #cond2
CheckCond
start #if3
push 3
call print
11t = RET
upd flag = 1
end #if3
#if4
#cond1 a <= 10 &&
#cond2 b > 10
cond #cond1 && #cond2
CheckCond
start #if4
push 4
call print
12t = RET
upd flag = 1
end #if4
ret flag
end f2
func int main
start main
str-1 =19373528 
PRINTF
start #block
end #block
var v a
var v b
var v flag1
var v flag2
var v flag
var v i
13t = GETINT
upd a = 13t
14t = GETINT
upd b = 14t
upd i = 0
#if5
#cond1 a != b
cond #cond1
CheckCond
start #if5
#while
#cond1 i < 3
cond #cond1
CheckCond
start #while
var v c1
var v c2
15t = a + b
upd c1 = 15t
16t = a - b
upd c2 = 16t
push c1
push c2
call f2
17t = RET
upd flag1 = 17t
push c2
push c1
call f2
18t = RET
upd flag2 = 18t
#if6
#cond1 flag1 == 0 ||
19t = ! flag2
#cond2 19t
cond #cond1 || #cond2
CheckCond
start #if6
upd flag = 0
end #if6
start #else6
upd flag = 1
end #else6
ln-1
str-1 =flag = 
ins-1
str-2 = : c1 = 
ins-2
str-3 =, c2 = 
ins-3
anw-1 = flag
anw-2 = c1
anw-3 = c2
PRINTF
20t = i + 1
upd i = 20t
21t = a + 5
upd a = 21t
22t = b + 5
upd b = 22t
#if7
#cond1 i >= 10
cond #cond1
CheckCond
start #if7
CONTINUE
end #if7
#if8
#cond1 i < 0
cond #cond1
CheckCond
start #if8
BREAK
end #if8
end #while
end #if5
ret 0
end main
