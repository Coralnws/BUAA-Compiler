int a=(3+4)*((a+c)-t*y)/6+7;
int add(int a[][2],int b){
a = (a[1][2] + (add(a,3)+add(add(n,b[3][2]),add(y,8))) * 4 +b[1][2]+add(a[2][1],3));
return (a[1][2] + (add(a,3)+add(add(n,b[3][2]),add(y,8))) * 4 +b[1][2]+add(a[2][1],3));
}

int main(){
int a[1][3],b[2][3];
int a=3,b=4;
const int a = (a[1][2] + (add(a,3)+add(add(n,b[3][2]),add(y,8))) * 4 +b[1][2]+add(a[2][1],3));
b[2][3] = (a[1][2] + (add(a,3)+add(add(n,b[3][2]),add(y,8))) * 4 +b[1][2]+add(a[2][1],3));
const int a=(b[1][2]+(3+add(2,3))*((a+c)-t*y)/6+7);
const int b[2][3] = {{1,2},{3,4}};

const int Map[5][5] = {
	{0, 1, 0, 1, 0},
	{0, 1, 1, 1, 1},
	{1, 1, 1, 1, 1},
	{1, 0, 1, 0, 1},
	{1, 1, 1, 0, 1}
};
a=add(add(a[2][3],add(4,5)),a[2][3]);
printf("val20: %d, val21:%d, val22:%d, val23:%d, val24:%d\n", val[2][0], val[2][1], val[2][2], val[2][3], val[2][4]);
printf("val20: %d, val21:%d, val22:%d, val23:%d, val24:%d\n", val[2][0], add(1,2),a,(3+2/4)*3 , val[2][4]);

const int a[1] = {4},b[4]={1,2,3,4};
int a[1] = {4},b[4];
return 0;
}